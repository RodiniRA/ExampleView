<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="AppBaseColor" Color="#2A579A" />
    <SolidColorBrush x:Key="TabHoverColor" Color="#1D3D6C" />
    <SolidColorBrush x:Key="FileTabBackground" Color="#142B4C" />
    <Color x:Key="AccentColor">#7F9AC2</Color>


    <Style x:Key="VirtualisedMetroTreeView"
           TargetType="{x:Type TreeView}"
           BasedOn="{StaticResource MetroTreeView}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
    </Style>

    <Style TargetType="{x:Type TreeView}"
           BasedOn="{StaticResource MetroTreeView}" />
    <Style TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource MetroTreeViewItem}" />

    <Style x:Key="ButtonSkin" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="Background" Value="{DynamicResource AppBaseColor}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AppBaseColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RibbonTabStyle" TargetType="{x:Type RibbonTab}">
        <Setter Property="Background" Value="#95A5C0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#95A5C0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RibbonGroupStyle" TargetType="{x:Type RibbonGroup}">
        <!--<Setter Property="Background" Value="#81AEF1"/>
                <Setter Property="Foreground" Value="#0B0F1A"/>-->
        <Setter Property="FontWeight" Value="Bold"/>
        <!--<Setter Property="MouseOverBackground" Value="#99BDF3"/>-->
    </Style>

    <Style x:Key="RibbonMenuButtonStyle" TargetType="{x:Type RibbonMenuButton}">
        <Setter Property="Foreground" Value="#0B0F1A"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="RibbonButtonStyle" TargetType="{x:Type RibbonButton}">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="#02356A"/>
    </Style>

    <Style x:Key="RibbonStyle" TargetType="{x:Type Ribbon}"
>
        <Setter Property="BorderBrush" Value="#95A5C0"/>
        <Setter Property="BorderThickness" Value="10"/>
        <Setter Property="Background" Value="#81AEF1"/>
    </Style>

    <Style x:Key="DockPanelStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource AppBaseColor}"/>
    </Style>

    <Style x:Key="FileTabStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource FileTabBackground}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Height" Value="25"/>
        <!--<Setter Property="Width" Value="50"/>-->
    </Style>

    <Style x:Key="NaviToolBarStyle" TargetType="{x:Type ToolBar}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="#81AEF1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="RibbonQuickAccessToolBarStyle" TargetType="{x:Type RibbonQuickAccessToolBar}">
        <Setter Property="Background" Value="HotPink"/>
    </Style>

    <Style x:Key="FlyoutBackground" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource AppBaseColor}"/>
    </Style>

    <Style x:Key="GroupBoxButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <!--<Setter Property="Margin" Value="5,0"/>-->
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Padding" Value="0"/>
    </Style>


    <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="Height" Value="60"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AppBaseColor}"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Padding" Value="5,0"/>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource AppBaseColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="{DynamicResource AppBaseColor}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource TabHoverColor}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarBackgroundStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Offset="0" Color="{DynamicResource AccentColor}"/>
                    <GradientStop Offset="0.75" Color="Transparent"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="#142B4C"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Height" Value="115"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}"  BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AppBaseColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlainButtonStyle" TargetType="{x:Type Button}">
    </Style>

    <!--will make buttons in the groupboxes closer to each other-->
    <Style x:Key="GroupBoxButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TEST" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">

    </Style>

    <Style x:Key="DropDownButtonItemStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AppBaseColor}"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemStyleTest" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Background" Value="white"/>
        <Setter Property="Width" Value="150"/>
    </Style>


    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Grid.ColumnSpan="2" Fill="#FFF4F4F5" />
                        <Rectangle Grid.Column="1" Grid.ColumnSpan="3" Fill="#FFF4F4F5" />
                        <Ellipse Grid.Column="3" Grid.ColumnSpan="2" Fill="#FFF4F4F5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4" />
                            <RowDefinition Height="4" />
                            <RowDefinition />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="4" />
                        </Grid.RowDefinitions>
                        <Ellipse Grid.Row="0" Grid.RowSpan="2" Fill="#FFF4F4F5" />
                        <Rectangle Grid.Row="1" Grid.RowSpan="3" Fill="#FFF4F4F5" />
                        <Ellipse Grid.Row="3" Grid.RowSpan="2" Fill="#FFF4F4F5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FBFBFBF">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*"/>
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource VerticalThumb}" theme:ScrollChrome.ScrollGlyph="VerticalGripper" Width="8"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="MinHeight" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FA7A7A7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.00001*"/>
                                </Grid.ColumnDefinitions>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb theme:ScrollChrome.ScrollGlyph="HorizontalGripper" Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroTabItemCloseableStyle" TargetType="{x:Type Controls:MetroTabItem}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="{DynamicResource AppBaseColor}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource TabHoverColor}"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </MultiTrigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:MetroTabItem}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="140"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}" TextElement.FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}" TextElement.FontSize="{TemplateBinding Controls:ControlsHelper.HeaderFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,1" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="0"/>
                                    <Button Width="7" x:Name="PART_CloseButton" Background="{DynamicResource GrayNormalBrush}" CommandParameter="{TemplateBinding CloseTabCommandParameter}" Command="{TemplateBinding CloseTabCommand}" HorizontalAlignment="Right" Height="{Binding Width, Mode=OneWay, RelativeSource={RelativeSource Self}}" IsTabStop="False" Margin="0,0,2,0" Style="{DynamicResource ChromelessButtonStyle}" VerticalAlignment="Top" Grid.Column="2">
                                        <Button.Resources>
                                            <Canvas x:Key="tabitem_close" Clip="F1M0,0L76,0 76,76 0,76 0,0" Height="76" Width="76">
                                                <Path Data="F1M26.9166,22.1667L37.9999,33.25 49.0832,22.1668 53.8332,26.9168 42.7499,38 53.8332,49.0834 49.0833,53.8334 37.9999,42.75 26.9166,53.8334 22.1666,49.0833 33.25,38 22.1667,26.9167 26.9166,22.1667z" Fill="{DynamicResource BlackBrush}" Height="31.6667" Canvas.Left="22.1666" Stretch="Fill" Canvas.Top="22.1667" Width="31.6666"/>
                                            </Canvas>
                                        </Button.Resources>
                                        <Button.OpacityMask>
                                            <VisualBrush Stretch="Uniform">
                                                <VisualBrush.Visual>
                                                    <Canvas Clip="F1M0,0L76,0 76,76 0,76 0,0" Height="76" Width="76">
                                                        <Path Data="F1M26.9166,22.1667L37.9999,33.25 49.0832,22.1668 53.8332,26.9168 42.7499,38 53.8332,49.0834 49.0833,53.8334 37.9999,42.75 26.9166,53.8334 22.1666,49.0833 33.25,38 22.1667,26.9167 26.9166,22.1667z" Fill="{DynamicResource BlackBrush}" Height="31.6667" Canvas.Left="22.1666" Stretch="Fill" Canvas.Top="22.1667" Width="31.6666"/>
                                                    </Canvas>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Button.OpacityMask>
                                    </Button>
                                </Grid>
                            </StackPanel>
                            <Rectangle x:Name="Underline" HorizontalAlignment="Stretch" Height="2" Margin="0,1,0,0">
                                <Rectangle.Visibility>
                                    <Binding Path="(Controls:TabControlHelper.IsUnderlined)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Rectangle.Visibility>
                            </Rectangle>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}"/>-->
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AppBaseColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayNormalBrush}"/>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayNormalBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="ContentSite" Value="True">
                            <!--<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayHoverBrush}"/>-->
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayHoverBrush}"/>
                            <Setter Property="Background" TargetName="PART_CloseButton" Value="{DynamicResource GrayHoverBrush}"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_CloseButton" Value="True">
                            <Setter Property="Background" TargetName="PART_CloseButton" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="6,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="MinWidth" Value="5"/>
                <Setter Property="Width" Value="150"/>
                <Setter Property="MinHeight" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Controls:ControlsHelper.HeaderFontSize" Value="{DynamicResource TabItemFontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <DockPanel.Resources>
                                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                                    </DockPanel.Resources>
                                    <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" DockPanel.Dock="Top" TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}" TextElement.FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}" TextElement.FontSize="{TemplateBinding Controls:ControlsHelper.HeaderFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="Underline" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Height="2" Margin="0,1,0,0">
                                        <Rectangle.Visibility>
                                            <Binding Path="(Controls:TabControlHelper.IsUnderlined)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Rectangle.Visibility>
                                    </Rectangle>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left"/>
                                    <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
                                    <Setter Property="Width" TargetName="Underline" Value="2"/>
                                    <Setter Property="Height" TargetName="Underline" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="Underline" Value="1,0,0,0"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Top">
                                    <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Bottom"/>
                                    <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
                                    <Setter Property="Height" TargetName="Underline" Value="2"/>
                                    <Setter Property="Width" TargetName="Underline" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="Underline" Value="0,1,0,0"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right"/>
                                    <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Left"/>
                                    <Setter Property="Width" TargetName="Underline" Value="2"/>
                                    <Setter Property="Height" TargetName="Underline" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="Underline" Value="0,0,1,0"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom"/>
                                    <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Top"/>
                                    <Setter Property="Height" TargetName="Underline" Value="2"/>
                                    <Setter Property="Width" TargetName="Underline" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="Underline" Value="0,0,0,1"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}"/>
                                    <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayNormalBrush}"/>
                                    <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayNormalBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="ContentSite" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayHoverBrush}"/>
                                    <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayHoverBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource HighlightBrush}"/>
                                    <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>


</ResourceDictionary>